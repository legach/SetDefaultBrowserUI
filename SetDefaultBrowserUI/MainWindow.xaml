<Window x:Class="SetDefaultBrowserUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SetDefaultBrowserUI"
        xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
        xmlns:utils="clr-namespace:SetDefaultBrowserUI.Utils"
        xmlns:bh="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms" 
        xmlns:viewmodels="clr-namespace:SetDefaultBrowserUI.ViewModels" 
        d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
        mc:Ignorable="d"
        ShowInTaskbar="{Binding ShowInTaskbar}"
        WindowState="{Binding WindowState}"
        Title="MainWindow" Height="350" Width="300">
    <Window.Resources>
        <utils:ImageFromPathConverter x:Key="ImageFromPathConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <utils:NotifyIconWrapper NotifyRequest="{Binding NotifyRequest}">
            <utils:NotifyIconWrapper.ContextMenu>
                <ContextMenu Opened="ContextMenu_OnOpened">
                    <MenuItem Header="Open" 
                              Command="{Binding NotifyIconOpenCommand}"/>
                    <Separator />
                    <MenuItem Header="Close" Command="{Binding NotifyIconExitCommand}"/>
                </ContextMenu>
            </utils:NotifyIconWrapper.ContextMenu>
            <bh:Interaction.Triggers>
                <bh:EventTrigger EventName="OpenSelected">
                    <bh:InvokeCommandAction Command="{Binding NotifyIconOpenCommand}"/>
                </bh:EventTrigger>
                <bh:EventTrigger EventName="ExitSelected">
                    <bh:InvokeCommandAction Command="{Binding NotifyIconExitCommand}"/>
                </bh:EventTrigger>
            </bh:Interaction.Triggers>
        </utils:NotifyIconWrapper>
        <ListBox Grid.Row="0"
                 ItemsSource="{Binding Browsers}" 
                 SelectionMode="Single" 
                 SelectedItem="{Binding SelectedBrowser}"
                 IsEnabled="{c:Binding !IsLoaderVisible}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Height="50">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" >
                            <Image Margin="5" Source="{Binding IconPath, Converter={StaticResource ImageFromPathConverter}}"/>
                        </Grid>
                        <StackPanel Grid.Column="1">
                            <TextBlock FontSize="15" Text="{Binding Name}"/>
                            <TextBlock Text="{Binding Path}"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Hive}"/>
                                <TextBlock Text="{Binding Identifier}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Width="70" Height="25" Margin="10" 
                    Command="{Binding RefreshListCommand}"
                    Content="Refresh" ToolTip="Refresh browser list"/>
            <Button Width="70" Height="25" Margin="10" 
                    Command="{Binding SetBrowserCommand}"
                    Content="Set selected" ToolTip="Set selected browser as default"/>
        </StackPanel>
        <Grid Grid.Row="0"
              Visibility="{c:Binding IsLoaderVisible}" 
              VerticalAlignment="Stretch">
                <Grid Background="White" Opacity="0.7"/>
                <TextBlock FontSize="18" 
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center" 
                           Text="Please wait..."/>
        </Grid>
    </Grid>
    <bh:Interaction.Triggers>
        <bh:EventTrigger EventName="Loaded">
            <bh:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </bh:EventTrigger>
        <bh:EventTrigger EventName="Closing">
            <bh:InvokeCommandAction Command="{Binding ClosingCommand}" PassEventArgsToCommand="True"/>
        </bh:EventTrigger>
    </bh:Interaction.Triggers>
</Window>
